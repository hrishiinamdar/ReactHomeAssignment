{"version":3,"sources":["GridTable.js","NavBarTopSide.js","App.js","reportWebVitals.js","index.js"],"names":["GridTable","useState","search","setSearch","className","TextField","InputProps","endAdornment","InputAdornment","IconButton","disableUnderline","placeholder","onChange","event","target","value","Table","striped","bordered","hover","variant","size","Data","filter","val","id","toLowerCase","includes","designation","firstName","lastName","phoneNumber","emailAddress","country","state","map","postEmployees","selectedList","selectedList2","selectedList3","selectedList4","useStyles","makeStyles","list","width","fullList","paper","color","buttonColor","backgroundColor","root","background","border","display","justifyContent","borderRadius","height","marginTop","padding","NavBarTopSide","classes","left","setState","toggleDrawer","anchor","open","option","key","Fragment","href","style","Button","onClick","Drawer","onClose","List","text1","ListItem","button","ListItemText","primary","Divider","text2","text3","text4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f53b862f.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport {Table} from \"react-bootstrap\";\nimport Data from './employeedata.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {TextField} from \"@material-ui/core\";\nimport './GridTable.css';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n\nconst GridTable= () => {\n    const[search,setSearch] = useState('');\n    return (\n    <>\n        <div className=\"GridTableContainer col-lg-12 col-md-12 col-sm-12\">\n            {/* <input \n            type=\"text\" \n            InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            \n            placeholder=\"Search for the records in the table...\" \n            onChange={event=>{setSearch(event.target.value)} } />  */}\n            <TextField className=\"textField\"\n                InputProps={{\n                    endAdornment: (\n                    <InputAdornment>\n                        <IconButton>\n                        <SearchIcon />\n                        </IconButton>\n                    </InputAdornment>\n                    ),disableUnderline: true \n                }}\n                placeholder=\"Search for the records in the table...\" \n                onChange={event=>{setSearch(event.target.value)} }\n            />\n\n            <br/>\n                            {/* <Table striped bordered hover variant=\"dark\"> */}\n                            <div>\n                                <Table className=\"table\" striped bordered hover variant=\"dark\" size=\"sm\">\n                                <thead>\n                                    <tr>\n                                    <th>ID</th>\n                                    <th>Designation</th>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Phone No.</th>\n                                    <th>Email</th>\n                                    <th>Country</th>\n                                    <th>State</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                        {\n                                        Data.filter((val)=>{\n                                            if(search === \"\"){\n                                                return val;\n                                            }\n                                            else if(val.id.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.designation.toLowerCase().includes(search.toLowerCase())){\n                                                    return val;\n                                            }\n                                            else if(val.firstName.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.lastName.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.phoneNumber.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.emailAddress.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.country.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                            else if(val.state.toLowerCase().includes(search.toLowerCase())){\n                                                return val;\n                                            }\n                                        }).map(postEmployees => {\n                                            return(\n                                                <tr>\n                                                <td>{postEmployees.id}</td>\n                                                <td>{postEmployees.designation}</td>\n                                                <td>{postEmployees.firstName}</td>\n                                                <td>{postEmployees.lastName}</td>\n                                                <td>{postEmployees.phoneNumber}</td>\n                                                <td>{postEmployees.emailAddress}</td>\n                                                <td>{postEmployees.country}</td>\n                                                <td>{postEmployees.state}</td>\n                                                </tr>\n                                            )\n                                            }\n                                        ) \n                                        }          \n                                </tbody>\n                                </Table>\n                            </div>\n        </div>\n    </>\n    )\n}\n\nexport default GridTable\n","import React, {useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './NavBarTopSide.css';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nlet selectedList =  [];\nlet selectedList2 = [];\nlet selectedList3 = [];\nlet selectedList4 = [];\n\nconst useStyles = makeStyles({\n        list: {\n            width: 500,\n        },\n        fullList: {\n            width: 'auto',\n        },\n        paper: {\n            color: \"black\",\n            width:200\n        },\n        buttonColor: {\n            \"&:hover\": {\n                backgroundColor: 'rgb(7, 177, 77, 0.42)'\n            },\n        },\n        root: {\n            background: '#656565',\n            border: 0,\n            display:'flex',\n            justifyContent:'space-between',\n            borderRadius: 3,\n            color: 'white',\n            height: 48,\n            marginTop:2,\n            padding: '0 30px',\n            \"&:hover\": {\n                background: '#000000'\n            },\n        }\n    });\nconst NavBarTopSide = () => {const classes = useStyles();\n    const [state, setState] = useState({\n    left: false\n    });\n\n    const toggleDrawer = (anchor, open, option) => (event) => {\n        // if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        if (event.key === 'Tab') {\n        return;\n        }\n        if(option === 'A') {\n            selectedList = ['SubMenu A1'];\n            selectedList2 = ['SubMenu A2'];\n            selectedList3 = ['SubMenu A3'];\n            selectedList4 = ['SubMenu A4'];\n        } else if(option === 'B') {\n            selectedList = ['SubMenu B1'];\n            selectedList2 = ['SubMenu B2'];\n            selectedList3 = ['SubMenu B3'];\n            selectedList4 = ['SubMenu B4'];\n        } else if(option === 'C') {\n            selectedList = ['SubMenu C1'];\n            selectedList2 = ['SubMenu C2'];\n            selectedList3 = ['SubMenu C3'];\n            selectedList4 = ['SubMenu C4'];\n        } else if(option === 'D') {\n            selectedList = ['SubMenu D1'];\n            selectedList2 = ['SubMenu D2'];\n            selectedList3 = ['SubMenu D3'];\n            selectedList4 = ['SubMenu D4'];\n        }\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        // <div\n        // className={clsx(classes.list, {\n        //     [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n        // })}\n        // role=\"presentation\"\n        // onClick={toggleDrawer(anchor, false)}\n        // onKeyDown={toggleDrawer(anchor, false)}\n        // >\n        <div>\n        <List>\n            {selectedList.map((text1) => (\n            <ListItem button key={text1}>\n                <ListItemText primary={text1} />\n            </ListItem>\n            ))}\n        </List>\n        <Divider />\n        <List>\n            {selectedList2.map((text2) => (\n            <ListItem button key={text2}>\n                <ListItemText primary={text2} />\n            </ListItem>\n            ))}\n        </List>\n        <Divider />\n        <List>\n            {selectedList3.map((text3) => (\n            <ListItem button key={text3}>\n                <ListItemText primary={text3} />\n            </ListItem>\n            ))}\n        </List>\n        <Divider />\n        <List>\n            {selectedList4.map((text4) => (\n            <ListItem button key={text4}>\n                <ListItemText primary={text4} />\n            </ListItem>\n            ))}\n        </List>\n        </div>\n    );\n        return (\n            <>\n            {['left'].map((anchor) => (\n            <React.Fragment key={anchor}>\n                <nav className=\"col-lg-12 col-md-12 col-sm-12 container\">\n                    <li><a className=\"active\" href=\"#\" style={{'text-decoration':'none'}}><Button className={classes.root} onClick={toggleDrawer(anchor, true, 'A')}>Menu A</Button></a></li>\n                    \n                    <li><a href=\"#\" style={{'text-decoration':'none'}}><Button className={classes.root} onClick={toggleDrawer(anchor, true, 'B')}>Menu B</Button></a></li>\n                    \n                    <li><a href=\"#\" style={{'text-decoration':'none'}}><Button className={classes.root} onClick={toggleDrawer(anchor, true, 'C')}>Menu C</Button></a></li>\n                    \n                    <li><a href=\"#\" style={{'text-decoration':'none'}}><Button className={classes.root} onClick={toggleDrawer(anchor, true, 'D')}>Menu D</Button></a></li>\n                </nav>\n                <Drawer classes={{ paper: classes.paper }} anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                {list(anchor)}\n                </Drawer>\n            </React.Fragment>\n        ))}\n            </>\n        )\n}\n\nexport default NavBarTopSide\n","import './App.css';\nimport GridTable from './GridTable';\nimport NavBarTopSide from './NavBarTopSide';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <br/>\n      <NavBarTopSide/>\n      <br/><br/><br/><br/>\n      <GridTable/>\n    </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}